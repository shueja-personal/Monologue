package monologue;


import java.util.function.*;
import edu.wpi.first.util.function.FloatSupplier;
import edu.wpi.first.util.struct.StructSerializable;

public interface Logged {
  public default String getPath() {
    return "";
  }
  public default String getFullPath() {
    return Monologue.loggedRegistry.getOrDefault(this, "notfound");
  }

  public default void addLoggingSupplier(String key, DoubleSupplier valueSupplier) {
    Monologue.ntLogger.addDouble(key, valueSupplier::getAsDouble);
  }

  public default void addLoggingSupplier(String key, DoubleSupplier valueSupplier, LogLevel level) {
    Monologue.ntLogger.addDouble(key, valueSupplier::getAsDouble, level);
  }

  public default void addLoggingSupplier(String key, IntSupplier valueSupplier) {
    Monologue.ntLogger.addInteger(key, valueSupplier::getAsInt);
  }

  public default void addLoggingSupplier(String key, IntSupplier valueSupplier, LogLevel level) {
    Monologue.ntLogger.addInteger(key, valueSupplier::getAsInt, level);
  }

  public default void addLoggingSupplier(String key, BooleanSupplier valueSupplier value) {
    Monologue.ntLogger.addBoolean(key, value::getAsBoolean);
  }

  public default void addLoggingSupplier(String key, BooleanSupplier valueSupplier, LogLevel level) {
    Monologue.ntLogger.addBoolean(key, valueSupplier::getAsBoolean, level);
  }
  
  public default void addLoggingSupplier(String key, FloatSupplier valueSupplier) {
    Monologue.ntLogger.addFloat(key, valueSupplier::getAsFloat);
  }

  public default void addLoggingSupplier(String key, FloatSupplier valueSupplier, LogLevel level) {
    Monologue.ntLogger.addFloat(key, valueSupplier::getAsFloat, level);
  }

  public default void addLoggingSupplier(String key, LongSupplier valueSupplier) {
    Monologue.ntLogger.addLong(key, valueSupplier::getAsLong);
  }

  public default void addLoggingSupplier(String key, LongSupplier valueSupplier, LogLevel level) {
    Monologue.ntLogger.addLong(key, valueSupplier::getAsLong, level);
  }
{%for t in types%}
  public default void log(String key, {{t.java.ValueType}} value) {
    Monologue.ntLogger.put(getFullPath() + "/" + key, value);
  }
  public default void log(String key, {{t.java.ValueType}} value, LogLevel level) {
    Monologue.ntLogger.put(getFullPath() + "/" + key, value, level);
  }
{%endfor%}
  public default <R extends StructSerializable> void log(String key, R value) {
    Monologue.ntLogger.put(getFullPath() + "/" + key, value);
  }
  public default <R extends StructSerializable> void log(String key, R value, LogLevel level) {
    Monologue.ntLogger.put(getFullPath() + "/" + key, value, level);
  }

  public default <R extends StructSerializable> void log(String key, R[] value) {
    Monologue.ntLogger.put(getFullPath() + "/" + key, value);
  }
  public default <R extends StructSerializable> void log(String key, R[] value, LogLevel level) {
    Monologue.ntLogger.put(getFullPath() + "/" + key, value, level);
  }
}
